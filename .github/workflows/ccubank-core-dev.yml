name: ccubank-core CI

on:
  push:
    branches: [main]

jobs:
#  lint:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Install node
#        uses: actions/setup-node@v3
#        with:
#          node-version:  "20.18.2"
#
#      - name: Install Dependencies
#        run: yarn install --frozen-lockfile
#
#      - name: Run Lint
#        run: yarn lint

#  build:
#    runs-on: ubuntu-latest
##    needs: lint
#    permissions:
#      contents: read
#      packages: write
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Log in to Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ secrets.REGISTRY }}
#          username: ${{ secrets.REGISTRY_USERNAME }}
#          password: ${{ secrets.REGISTRY_PASSWORD }}
#
#      - name: Build image
#        run: |
#          docker build -t sjc.vultrcr.com/hangregistry469/ccubank-core:latest -f Dockerfile .
#
#      - name: Push image to registry
#        run: |
#          echo ${{ secrets.REGISTRY_PASSWORD }} | docker login sjc.vultrcr.com -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin
#          docker push sjc.vultrcr.com/hangregistry469/ccubank-core:latest
#          docker image prune -f
#          docker logout ${{ secrets.REGISTRY }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.WEB_SERVER_SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Debug SSH Connection
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.WEB_SERVER_SSH_HOST }} "echo SSH connection successful"

      - name: Debug File Existence
        run: |
          if [ -f "docker-compose.development.yaml" ]; then
            echo "File exists: docker-compose.development.yaml"
          else
            echo "ERROR: File 'docker-compose.development.yaml' not found!"
            exit 1
          fi

      - name: Server Deployment
        env:
          COMPOSE_FILE_DIR: /root/ccubank
          COMPOSE_FILE_NAME: docker-compose.development.yaml
        run: bash ./scripts/deploy.sh


